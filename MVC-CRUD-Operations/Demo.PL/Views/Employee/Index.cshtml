@model IEnumerable<EmployeeViewModel>

@{
    ViewData["Title"] = "All Employees";
    // string VDataMessage = (string)@ViewData["Message"]; // Enforce Type Safety -> Casting [Strongly Typed]

    // string VBagMessage = ViewBag.Message;

}

@* <div class="alert alert-primary">
    @ViewBag.Message
</div> *@


<a asp-action="Create" class="btn btn-success">Create New Employee</a>
<br />
<br />
@if (Model.Count() > 0)
{
    <h1>All Employees</h1>
    <br />

    <form asp-action="Index" class="mt-3 row justify-content-center align-items-center">
        <div class="row col-8 offset-2">
            <div class="col-8">
                <input class="form-control" id="SearchValue" type="text" name="SearchValue" placeholder="Search By Name" />
            </div>
            <div class="col-4">
                <input type="submit" class="btn btn-info" value="Search" />
            </div>
        </div>
    </form>


    <table class="table table-striped table-hover mt-4">
        <thead>
            <tr>
                <td>@Html.DisplayNameFor(d => d.Image)</td>
                <td>@Html.DisplayNameFor(d => d.Name)</td>
                <td>@Html.DisplayNameFor(d => d.Age)</td>
                <td>@Html.DisplayNameFor(d => d.Salary)</td>
                <td>@Html.DisplayNameFor(d => d.Department)</td>
                @* <td>@Html.DisplayNameFor(d => d.Address)</td> *@
                @* <td>@Html.DisplayNameFor(d => d.Gender)</td> *@
                <td>@Html.DisplayNameFor(d => d.Email)</td>
                @* <td>@Html.DisplayNameFor(d => d.PhoneNumber)</td> *@
                @* <td>@Html.DisplayNameFor(d => d.HireDate)</td> *@
                <td>@Html.DisplayNameFor(d => d.IsActive)</td>
                @* <td>@Html.DisplayNameFor(d => d.EmployeeType)</td> *@

                <td>Details</td>
                <td>Update</td>
                <td>Delete</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td><img src="~/Files/Images/@employee.ImageName" class="img-fluid rounded-circle" height="40" width="40" alt="Employee' Image" /></td>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@Html.DisplayFor(E => employee.Salary)</td>
                    <td>@Html.DisplayFor(E => employee.Department.Name)</td>
                    @* <td>@employee.Address</td> *@
                    @* <td>@Html.DisplayFor(E => employee.Gender)</td> *@
                    <td>@Html.DisplayFor(E => employee.Email)</td>
                    @* <td>@employee.PhoneNumber</td> *@
                    @* <td>@employee.HireDate</td> *@
                    <td>
                        @if (employee.IsActive == true)
                        {
                            <i class="fa-solid fa-circle" style="color: green"></i>
                        } else
                        {
                            <i class="fa-solid fa-circle" style="color: red"></i>
                        }
                    </td>

                    <partial name="_ButtonsPartialView" model="@employee.Id.ToString()" />
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <div class="mt-5 alert alert-warning">
        <h3>There is No Employees!</h3>
    </div>
}

<script>
    const searchBar = $('#SearchValue');
    const table = $('table');

    searchBar.on('keyup', function (event) {
        var searchValue = searchBar.val();

        $.ajax({
            url: '/Employee/Search',
            type: 'Get',
            data: { SearchValue: searchValue },
            success: function(result) {
                table.html(result)
            },
            error: function (xhr, status, error) {
                console.log(error)
            }
        })
    })

</script>

